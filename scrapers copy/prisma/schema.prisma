// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  firstName   String
  lastName    String
  phone       String?
  addresses   Address[]
  preferences UserPreferences?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}

model Address {
  id        String  @id @default(cuid())
  userId    String
  label     String  // "Home", "Work", "Mom's House", etc.
  firstName String
  lastName  String
  address1  String
  address2  String?
  city      String
  state     String
  zip       String
  country   String  @default("United States")
  latitude  Float?
  longitude Float?
  phone     String?
  isDefault Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders    Order[]

  @@map("addresses")
}

model UserPreferences {
  id              String  @id @default(cuid())
  userId          String  @unique
  deliveryRadius  Int     @default(10) // miles
  priceWeight     Float   @default(0.4) // 0-1 weight for price in scoring
  distanceWeight  Float   @default(0.3) // 0-1 weight for distance in scoring
  ratingWeight    Float   @default(0.3) // 0-1 weight for store rating in scoring
  preferDelivery  Boolean @default(true)
  preferPickup    Boolean @default(true)
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_preferences")
}

model Store {
  id           String    @id @default(cuid())
  name         String
  website      String    @unique
  storeType    StoreType
  address      String
  city         String
  state        String
  zip          String
  latitude     Float?
  longitude    Float?
  phone        String?
  rating       Float?
  deliveryFee  Float?
  minDelivery  Float?
  maxDelivery  Float?
  deliveryRadius Int?    // miles
  isActive     Boolean   @default(true)
  scrapingInfo ScrapingInfo?
  products     Product[]
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("stores")
}

model ScrapingInfo {
  id                String   @id @default(cuid())
  storeId           String   @unique
  baseUrl           String
  productSelectors  Json     // CSS selectors for products
  priceSelectors    Json     // CSS selectors for prices
  titleSelectors    Json     // CSS selectors for titles
  imageSelectors    Json     // CSS selectors for images
  cartSelectors     Json?    // CSS selectors for cart functionality
  lastScrapedAt     DateTime?
  scrapingFrequency Int      @default(24) // hours
  isActive          Boolean  @default(true)
  store             Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@map("scraping_info")
}

model Product {
  id          String      @id @default(cuid())
  storeId     String
  title       String
  description String?
  price       Float
  originalPrice Float?
  image       String?
  url         String
  category    Category
  subcategory String?
  brand       String?
  size        String?
  abv         Float?      // Alcohol by volume for liquor
  strain      String?     // For cannabis products
  prescription Boolean?   // For pharmacy items
  inStock     Boolean     @default(true)
  relevanceScore Float?   // AI-calculated relevance for searches
  store       Store       @relation(fields: [storeId], references: [id], onDelete: Cascade)
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("products")
}

model Order {
  id             String      @id @default(cuid())
  userId         String
  storeId        String
  addressId      String      // Delivery address
  orderNumber    String?     // Store's order number
  status         OrderStatus @default(PENDING)
  userRequest    String      // Original natural language request
  totalAmount    Float
  deliveryFee    Float?
  checkoutUrl    String?
  deliveryDate   DateTime?
  cardMessage    String?
  deliveryType   DeliveryType
  orderItems     OrderItem[]
  user           User        @relation(fields: [userId], references: [id])
  store          Store       @relation(fields: [storeId], references: [id])
  address        Address     @relation(fields: [addressId], references: [id])
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int     @default(1)
  price     Float   // Price at time of order
  variant   String? // Size, color, etc.
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model SearchLog {
  id           String   @id @default(cuid())
  userId       String?
  query        String
  resultsCount Int
  responseTime Int      // milliseconds
  createdAt    DateTime @default(now())

  @@map("search_logs")
}

// Enums
enum StoreType {
  FLOWER_SHOP
  LIQUOR_STORE
  WINE_SHOP
  BEER_DISTRIBUTOR
  DISPENSARY
  PHARMACY
  GROCERY_STORE
  CONVENIENCE_STORE
  RESTAURANT
  BAKERY
  BUTCHER
  SEAFOOD_MARKET
  FARMERS_MARKET
  SPECIALTY_FOOD
  GIFT_SHOP
  BOOKSTORE
  ELECTRONICS
  HARDWARE_STORE
  PET_STORE
  GENERAL
}

enum Category {
  // Flowers & Plants
  FLOWERS
  PLANTS
  GARDEN_SUPPLIES
  
  // Alcohol & Beverages
  BEER
  WINE
  SPIRITS
  COCKTAIL_MIXERS
  NON_ALCOHOLIC_BEVERAGES
  
  // Cannabis (where legal)
  CANNABIS_FLOWER
  CANNABIS_EDIBLES
  CANNABIS_CONCENTRATES
  CBD_PRODUCTS
  
  // Food & Grocery
  FRESH_PRODUCE
  MEAT_SEAFOOD
  DAIRY_EGGS
  BAKERY
  DELI
  FROZEN_FOODS
  PANTRY_STAPLES
  SNACKS
  PREPARED_MEALS
  
  // Health & Pharmacy
  PRESCRIPTION_DRUGS
  OTC_MEDICATIONS
  VITAMINS_SUPPLEMENTS
  PERSONAL_CARE
  MEDICAL_SUPPLIES
  
  // Gifts & Special Occasions
  GIFT_BASKETS
  CHOCOLATES_CANDY
  GREETING_CARDS
  PARTY_SUPPLIES
  TOYS_GAMES
  
  // Home & Garden
  HOUSEHOLD_SUPPLIES
  CLEANING_PRODUCTS
  TOOLS_HARDWARE
  HOME_DECOR
  
  // Electronics & Tech
  ELECTRONICS
  PHONE_ACCESSORIES
  COMPUTER_SUPPLIES
  
  // Pet Supplies
  PET_FOOD
  PET_ACCESSORIES
  PET_MEDICATIONS
  
  // Books & Media
  BOOKS
  MAGAZINES
  MOVIES_MUSIC
  
  // Automotive
  AUTO_PARTS
  CAR_ACCESSORIES
  
  // Other
  OFFICE_SUPPLIES
  SPORTING_GOODS
  CLOTHING_ACCESSORIES
  OTHER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
  FAILED
}

enum DeliveryType {
  DELIVERY
  PICKUP
  BOTH
}